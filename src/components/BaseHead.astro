---
import { ViewTransitions } from "astro:transitions";
import "../styles/global.css";
import { SITE_TITLE } from "../config";

export interface Props {
  title: string;
  description: string;
  image?: string;
}

let { title, description, image = "/octopus.jpg" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, "https://tricked.dev");
if (!title.includes(SITE_TITLE)) {
  title = `${title} - ${SITE_TITLE}`;
}
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/png" href="/favicon.png" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:color" content={`#3D11A9`} />
<meta property="theme-color" content={`#3D11A9`} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Canonical URL -->
<meta name="canonical" content={canonicalURL} />

<script is:inline>
  const syncTheme = () => {
    let theme = localStorage.getItem("starlight-theme");

    if (theme) {
      document.documentElement.dataset.theme = theme;
    }
  };

  syncTheme();
  document.addEventListener("astro:after-swap", syncTheme);

  window.StarlightThemeProvider = (() => {
    const storedTheme =
      typeof localStorage !== "undefined" &&
      localStorage.getItem("starlight-theme");
    const theme =
      storedTheme ||
      (window.matchMedia("(prefers-color-scheme: light)").matches
        ? "light"
        : "dark");

    document.documentElement.dataset.theme = theme;
    return {
      updatePickers(theme = storedTheme || "dark") {
        document
          .querySelectorAll("starlight-theme-select")
          .forEach((picker) => {
            const select = picker.querySelector("select");
            if (select) select.value = theme;
          });
      },
    };
  })();
</script>

<ViewTransitions />
